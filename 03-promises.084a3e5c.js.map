{"mappings":"AACA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAyC3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhDbR,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMT,EAAQU,OAAOf,EAAWgB,OAC1BC,EAAOF,OAAOd,EAAUe,OACxBE,EAASH,OAAOb,EAAYc,QAKpC,SAAwBG,EAAOF,EAAMC,GACnC,MAAME,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/B,MAAMC,EAAUnB,EAAckB,EAAI,EAAGF,GACrCC,EAASG,KAAKD,GAEdH,GAASF,C,CAGXX,QAAQkB,WAAWJ,GAChBK,MAAKC,IACJA,EAAQC,SAAQ,CAACC,EAAQC,KACvB,GAAsB,cAAlBD,EAAOE,OAAwB,CACjC,MAAM1B,SAAEA,EAAQC,MAAEA,GAAUuB,EAAOZ,MACnCe,QAAQC,IAAI,uBAAqB5B,QAAiBC,M,KAC7C,CACL,MAAMD,SAAEA,EAAQC,MAAEA,GAAUuB,EAAOK,OACnCF,QAAQC,IAAI,sBAAoB5B,QAAeC,M,IAEjD,IAEH6B,OAAMC,IACLJ,QAAQC,IAAI,SAAUG,EAAM,G,CA1BhCC,CAAe/B,EAAOY,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  \n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  \n  createPromises(delay, step, amount);\n}\n\nfunction createPromises(delay, step, amount) {\n  const promises = [];\n  \n  for (let i = 0; i < amount; i++) {   \n    const promise = createPromise(i + 1, delay);\n    promises.push(promise);\n    \n    delay += step;\n  }\n  \n  Promise.allSettled(promises)\n    .then(results => {\n      results.forEach((result, index) => {\n        if (result.status === 'fulfilled') {\n          const { position, delay } = result.value;\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          const { position, delay } = result.reason;\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        }\n      });\n    })\n    .catch(error => {\n      console.log('Error:', error);\n    });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Number","value","step","amount","delay1","promises","i","promise","push","allSettled","then","results","forEach","result","index","status","console","log","reason","catch","error","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.084a3e5c.js.map"}